services:

  nginx:
    image: "bitnami/nginx:latest"
    container_name: nginx-proxy
    restart: "always"
    user: "root"
    ports:
      - "80:8080"
    volumes:
      - "./deployment/nginx/nginx.conf:/opt/bitnami/nginx/conf/nginx.conf:ro"
    depends_on:
      neo4j:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - app-network

  #  TODO FILL IN FRONTEND
  #  frontend:
  #    build: ./frontend
  #    container_name: react-frontend
  #    networks:
  #      - app-network
  #    restart: unless-stopped

  #  backend:
  #    build: ./backend
  #    container_name: spring-backend
  #    environment:
  #      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/mydb
  #      - SPRING_DATASOURCE_USERNAME=postgres
  #      - SPRING_DATASOURCE_PASSWORD=postgres123
  #      - SPRING_NEO4J_URI=bolt://neo4j:7687
  #      - SPRING_NEO4J_AUTHENTICATION_USERNAME=neo4j
  #      - SPRING_NEO4J_AUTHENTICATION_PASSWORD=VeryStrongPassword2137!
  #    depends_on:
  #      - postgres
  #      - neo4j
  #    networks:
  #      - app-network
  #    restart: unless-stopped
  neo4j:
    image: neo4j:latest
    container_name: neo4j
    environment:
      - NEO4J_AUTH=neo4j/VeryStrongPassword2137!
      - NEO4J_server_directories_import=/import/gtfs
      - NEO4J_server_memory_heap_initial__size=512m
      - NEO4J_server_memory_heap_max__size=2G
#    ports:
#      - "7474:7474"
#      - "7687:7687"
    volumes:
      - neo4j:/data
      - neo4j:/logs
      - neo4j:/import
      - neo4j:/plugins
    networks:
      - app-network
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:7474 || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres123
      - POSTGRES_DB=mydb
#    ports:
#      - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

volumes:
  neo4j:
  postgres:

networks:
  app-network:
    driver: bridge
